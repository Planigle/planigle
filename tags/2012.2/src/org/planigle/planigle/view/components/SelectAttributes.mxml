<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:mx="http://www.adobe.com/2006/mxml" xmlns:component="org.planigle.planigle.view.components.*" initialize="addCheckBoxes()" height="600" fontSize="{ViewModelLocator.getInstance().fontSize}">
	<mx:Script>
		<![CDATA[
			import mx.managers.PopUpManager;
			import mx.controls.CheckBox;
			import mx.collections.ArrayCollection;
			import org.planigle.planigle.model.IndividualFactory;
			import org.planigle.planigle.model.StoryAttribute;
			import org.planigle.planigle.model.ViewModelLocator;

			private var updateCompleteFunction:Function;
			private var changeCount:int = 0;
			private var children:ArrayCollection = new ArrayCollection();

			public function init(updateCompleteFunction:Function):void
			{
				this.updateCompleteFunction = updateCompleteFunction;
							
			}
			
			private function addCheckBoxes():void
			{
				var newHeight:int = IndividualFactory.current().selectedProject.storyAttributes.length * 27 + 120;
				height = newHeight > 600 ? 600 : newHeight;
				for each (var attrib:StoryAttribute in IndividualFactory.current().selectedProject.storyAttributes)
				{
					var check:CheckBox = new CheckBox();
					check.automationName = "select_" + attrib.name;
					check.label = attrib.name;
					check.selected = attrib.show;
					list.addChild(check);
					children.addItem(check);
				}
			}

			// OK.
			private function ok(event:Event):void
			{
				PopUpManager.removePopUp(this);
				for each (var attrib:StoryAttribute in IndividualFactory.current().selectedProject.storyAttributes)
				{
					for each (var check:CheckBox in children)
					{
						if (check.label == attrib.name)
						{
							if (check.selected != attrib.show)
							{
								changeCount++;
								attrib.update({"record[show]": (check.selected ? "true" : "false")}, updateComplete, updateComplete);
							}
						}
					}
				}
			}
			
			private function updateComplete():void
			{
				changeCount--;
				if (changeCount == 0 && updateCompleteFunction != null)
					updateCompleteFunction();
			}
						
			// Cancel.
			private function cancel(event:Event):void
			{
				PopUpManager.removePopUp(this);
			}
		]]>
	</mx:Script>
	<mx:Form defaultButton="{btn_ok}" width="100%" height="100%">
		<mx:VBox id="list">
		</mx:VBox>
		<mx:HBox y="270" width="100%" horizontalAlign="center">
			<mx:Button id="btn_ok" label="OK" click="ok(event)"/>
			<mx:Button label="Cancel" click="cancel(event)"/>
		</mx:HBox>	
	</mx:Form>
</mx:TitleWindow>