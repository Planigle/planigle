<?xml version="1.0" encoding="utf-8"?>
<mx:Module width="100%" height="100%" xmlns:mx="http://www.adobe.com/2006/mxml" paddingBottom="0" paddingTop="0" paddingLeft="0" paddingRight="0"
	layout="absolute"
	xmlns:view="org.planigle.planigle.view.*" initialize="onInitialize(event)">
	
	<!--The main style sheet for all the pages.-->
	<mx:Style source="stylesheets/flex.css"/>
	
	<mx:Script>
		<![CDATA[
			import com.adobe.viewsource.ViewSource;
			import mx.binding.utils.ChangeWatcher;
			import flash.display.DisplayObject;
			import org.planigle.planigle.model.IndividualFactory;
			import org.planigle.planigle.events.ProjectChangedEvent;
			import org.planigle.planigle.events.IndividualChangedEvent;
			import org.planigle.planigle.events.ReleaseChangedEvent;
			import org.planigle.planigle.events.IterationChangedEvent;
			import org.planigle.planigle.events.StoryChangedEvent;
			import org.planigle.planigle.events.LogoutEvent;
			import org.planigle.planigle.view.ScheduleTab;
			import org.planigle.planigle.view.StoriesTab;
			import org.planigle.planigle.view.PeopleTab;

			[Bindable]
			private var factory:IndividualFactory = IndividualFactory.getInstance();

			private var schedule:ScheduleTab = new ScheduleTab();
			private var stories:StoriesTab = new StoriesTab();
			private var people:PeopleTab = new PeopleTab();

			// Add the base tabs.
			private function onInitialize(event:Event):void
			{
				mainViewStack.addChild(people);
				ChangeWatcher.watch( factory, "currentIndividual", resetState );
				resetState(event); // This is to catch it the first time (The event has already been sent).
			}

			// Hide the specified tab.
			private function hideTab(tab:DisplayObject):void
			{
				if (mainViewStack.getChildren().indexOf(tab) != -1 )
					mainViewStack.removeChild( tab );
			}
			
			// Show the specified tab.
			private function showTab(tab:DisplayObject):void
			{
				if (mainViewStack.getChildren().indexOf(tab) == -1 )
					mainViewStack.addChildAt( tab, 0 );
			}

			// Reset based on a new user.
			private function resetState(event:Event):void
			{
				if (factory.currentIndividual)
				{
					if (factory.currentIndividual.isAdminOnly())
					{
						hideTab(stories);
						hideTab(schedule);
					}
					else
					{
						showTab(schedule);
						showTab(stories);
					}
				}
			}

			// Reset the state of the selected tab.
			private function resetTab(event:Event):void
			{
				Object(mainViewStack.selectedChild).resetState(event);
			}	
					
			// Refresh any cached data.
			private function refresh():void
			{
				new ProjectChangedEvent().dispatch();
				new IndividualChangedEvent().dispatch();
				if (!factory.currentIndividual.isAdminOnly())
				{
					new ReleaseChangedEvent().dispatch();
					new IterationChangedEvent().dispatch();
					new StoryChangedEvent().dispatch();
				}
			}
			
			// Log out.
			private function logout():void
			{
				new LogoutEvent().dispatch();
			}			
		]]>
	</mx:Script>
	<mx:HBox horizontalGap="5" width="100%">
		<mx:TabBar id="mainNavigation" dataProvider="{mainViewStack}" itemClick="resetTab(event)" paddingBottom="0" paddingTop="0" paddingLeft="0" paddingRight="0">
		</mx:TabBar>
		<mx:HBox horizontalAlign="right" width="100%">
			<mx:LinkButton label="Refresh" id="refreshButton" click="{refresh()}"/>
			<mx:LinkButton label="Log out" id="logoutButton" click="{logout()}"/>
		</mx:HBox>
	</mx:HBox>
	<mx:ViewStack id="mainViewStack" y="20" width="100%" height="100%" paddingBottom="0" paddingTop="0" paddingLeft="0" paddingRight="0">
	</mx:ViewStack>
</mx:Module>